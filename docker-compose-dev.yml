version: '3.8'

services:
  # Service Registry (Eureka)
  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    container_name: service-registry
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - mealbroker-network

  # Config Server
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - CONFIG_SERVER_USERNAME=configuser
      - CONFIG_SERVER_PASSWORD=configpassword
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - mealbroker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - GATEWAY_USERNAME=admin
      - GATEWAY_PASSWORD=admin123
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - mealbroker-network

  # Location Service
  location-service:
    build:
      context: ./location-service
      dockerfile: Dockerfile
    container_name: location-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - mealbroker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Customer Service with H2
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    container_name: customer-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:customerdb;DB_CLOSE_DELAY=-1
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_H2_CONSOLE_ENABLED=true
      - SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS=true
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - mealbroker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./customer-service/src/main/resources:/app/resources
      - ./customer-service/logs:/app/logs

  # Restaurant Service with H2
  restaurant-service:
    build:
      context: ./restaurant-service
      dockerfile: Dockerfile
    container_name: restaurant-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:restaurantdb;DB_CLOSE_DELAY=-1
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_H2_CONSOLE_ENABLED=true
      - SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS=true
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - mealbroker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./restaurant-service/src/main/resources:/app/resources
      - ./restaurant-service/logs:/app/logs

  # Order Service with H2
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:orderdb;DB_CLOSE_DELAY=-1
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_H2_CONSOLE_ENABLED=true
      - SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS=true
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
      customer-service:
        condition: service_healthy
      restaurant-service:
        condition: service_healthy
    networks:
      - mealbroker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./order-service/src/main/resources:/app/resources
      - ./order-service/logs:/app/logs

  # Order Broker
  order-broker:
    build:
      context: ./order-broker
      dockerfile: Dockerfile
    container_name: order-broker
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
      customer-service:
        condition: service_healthy
      restaurant-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      location-service:
        condition: service_healthy
    networks:
      - mealbroker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./order-broker/logs:/app/logs

networks:
  mealbroker-network:
    driver: bridge