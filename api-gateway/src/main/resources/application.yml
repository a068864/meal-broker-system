server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/api/customers/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20

        - id: restaurant-service
          uri: lb://restaurant-service
          predicates:
            - Path=/api/restaurants/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**

        - id: order-broker
          uri: lb://order-broker
          predicates:
            - Path=/api/broker/**

        - id: location-service
          uri: lb://location-service
          predicates:
            - Path=/api/locations/**

      # Default filters for all routes
      default-filters:
        - AddResponseHeader=X-Application-Name, meal-broker
        - AddResponseHeader=X-Application-Version, 1.0.0
  security:
    user:
          name: ${GATEWAY_USERNAME:admin}
          password: ${GATEWAY_PASSWORD:admin123}

# Eureka Client configuration
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Spring Security configuration

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.security: INFO
    com.mealbroker: DEBUG